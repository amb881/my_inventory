from client_hardware import Client_Hardware
from hardware import Hardware
from software import Software
from cpe import CPE
from item import Item


class Catalog(object):
    def __init__(self):
        """
        inicia objeto
        """
        self.catalog = {}

    def add_item(self, item):
        """
        Funcao adicionar item no inventory
        """
        self.catalog[item.item_id] = item

    def delete_item(self, id):
        """
        Funcao eliminar item do inventory
        """
        del self.catalog[id]


    def check_item(self, id):
        """
        Funcao mostrar item atraves do id
        """
        return self.catalog[id]


    def print_catalog(self):
        """
        Funcao dar print ao inventory completo
        """
        return self.catalog


    def brand_cpe(self, brand):
        """
        Funcao mostrar modelos de cpe de uma brand
        """
        models = []
        for id in self.catalog:
            item = self.catalog[id]
            if type(item) is CPE:
                cpe = item
                if cpe.item_brand == brand:
                    if cpe.CPE_cpe_model not in models:
                        models.append(self.catalog[id].CPE_cpe_model)
        return models

    def stock_cpe(self):
        """
        Funcao mostrar o numero de cpe em stocks
        """
        number = 0
        for id in self.catalog:
            item = self.catalog[id]
            if type(item) is CPE:
                cpe = item
                if cpe.cpe_status == "stock":
                    number = number + 1
        return number

    def hardware_model_stock(self):
        """
        Funcao para mostrar quantos items de hardware de cada tipo ha em stock
        """
        hardware_types ={}
        for id in self.catalog:
            item = self.catalog[id]
            if type(item) is Hardware:
                hardware = item
                if hardware.Hardware_type not in hardware_types:
                    hardware_types[hardware.Hardware_type] = 1
                else:
                    hardware_types[hardware.Hardware_type] += 1
        return hardware_types
